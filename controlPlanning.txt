// For the start state
fetch
    PCL_inc = 1
    IR_ld   = 1
    ...
    next depends on opcode

// Immediate addressing mode:
immed
    adc_imm
        PCL_inc = 1
        IR_ld   = 1
        
    and_imm
        PCL_inc = 1
        IR_ld   = 1
    cmp_imm
        PCL_inc = 1
        IR_ld   = 1
    cpx_imm
        PCL_inc = 1
        IR_ld   = 1
    cpy_imm
        PCL_inc = 1
        IR_ld   = 1
    eor_imm
        PCL_inc = 1
        IR_ld   = 1
    lda_imm
        PCL_inc = 1
        IR_ld   = 1
    ldx_imm
        PCL_inc = 1
        IR_ld   = 1
    ldy_imm
        PCL_inc = 1
        IR_ld   = 1
    ora_imm
        PCL_inc = 1
        IR_ld   = 1
    sbc_imm
        PCL_inc = 1
        IR_ld   = 1
    
// Accumulator or implied addressing:
accImp
    asl_acc
    clc_imp
    cld_imp
    cli_imp
    clv_imp
    dex_imp
    dey_imp
    inx_imp
    iny_imp
    lsr_acc
    nop_imp
    rol_acc
    ror_acc
    sec_imp
    sed_imp
    sei_imp
    tax_imp
    tay_imp
    tsx_imp
    txa_imp
    txs_imp
    tya_imp

// Zero-page read
zpg_r
    adc_zpg
    and_zpg
    bit_zpg
    cmp_zpg
    cpx_zpg
    cpy_zpg
    eor_zpg
    lda_zpg
    ldx_zpg
    ldy_zpg
    ora_zpg
    sbc_zpg
    
// Zero-page read-mod-write 
zpg_rmw
    asl_zpg
    dec_zpg
    inc_zpg
    lsr_zpg
    rol_zpg
    ror_zpg

// Zero-page write
zpg_w
    sta_zpg
    stx_zpg
    sty_zpg

// Zero-page idx, read
zpx_r
    adc_zpx
    and_zpx
    cmp_zpx
    eor_zpx
    lda_zpx
    ldx_zpx
    ora_zpx
    sbc_zpx
    
// Zero-page idx, read-mod-write
zpx_rmw
    asl_zpx
    dec_zpx
    inc_zpx
    lsr_zpx
    rol_zpx
    ror_zpx
